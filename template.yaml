AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  slack-golang-app

Parameters:
  Stage:
    Type: String
  SsmParamSlackAuthTokenKeyName:
    Type: String
  SsmParamSlackAuthTokenValue:
    Type: String
  SsmRegion:
    Type: String

Globals:
  Function:
    Timeout: 5

Resources:
  SlackGolangAppApi:
    Type: AWS::Serverless::Api
    Properties:
      StageName: !Ref Stage
      OpenApiVersion: 3.0.2
      EndpointConfiguration: 
        Type: REGIONAL
      DefinitionBody:
        Fn::Transform:
          Name: AWS::Include
          Parameters:
            Location: openapi.yaml # swaggerファイルのパス指定
  
  SsmParamSlackAuthKey:
   Type: AWS::SSM::Parameter
   Properties:
     Description: SlackAPI Auth Key
     Name: !Ref SsmParamSlackAuthTokenKeyName
     Type: String
     Value: !Ref SsmParamSlackAuthTokenValue

  GetNewsFunction:
    Type: AWS::Serverless::Function
    Dependson: [
      GetNewsFuncLogGroup,
      LambdaFunctionBaseRole
    ]
    Properties:
      FunctionName: getNews
      CodeUri: get-news/
      Handler: get-news
      Runtime: go1.x
      Architectures:
        - x86_64
      Tracing: PassThrough
      MemorySize: 128
      Timeout: 300
      Role: !GetAtt LambdaFunctionBaseRole.Arn
      Events:
        CatchAll:
          Type: Api
          Properties:
            Path: /get/news
            Method: POST
            RestApiId: 
              Ref: SlackGolangAppApi
      Environment: 
        Variables: 
          SSM_REGION: !Ref SsmRegion
          SSM_SLACK_AUTH_KEY_NAME: !Ref SsmParamSlackAuthTokenKeyName

  GetNewsFuncLogGroup: # lambda実行ログを保持するロググループ
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: /aws/lambda/getNews
      RetentionInDays: 7

  LambdaFunctionBaseRole: # lambda共通の実行ロール
    Type: AWS::IAM::Role
    Properties:
      RoleName: slack-golang-app-lambda-base-role
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Action: 
              - sts:AssumeRole
            Principal:
              Service: 
                - lambda.amazonaws.com
      ManagedPolicyArns:
       - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
       - arn:aws:iam::aws:policy/AmazonSSMReadOnlyAccess

Outputs:
  GetNewsAPI:
    Description: "GetNewsAPI endpoint URL"
    Value: !Sub "https://${SlackGolangAppApi}.execute-api.${AWS::Region}.amazonaws.com/${Stage}/get/news"
  GetNewsFunction:
    Description: "GetNewsAPI Lambda Function ARN"
    Value: !GetAtt GetNewsFunction.Arn